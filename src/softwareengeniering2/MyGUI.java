/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package softwareengeniering2;

import java.awt.AWTEvent;
import java.awt.Toolkit;
import java.awt.event.AWTEventListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JTextArea;
import javax.swing.Timer;

/**
 * Die Klasse Gui_Weckzeit modelliert das Hauptfenster dieser Software
 * 
 * @author
 */
public class MyGUI extends javax.swing.JFrame{   
           
    /**
     * Creates new form NewJFrame
     */
    static private MyGUI instance = null; // Anm.: Implementierung des Singleton-Entwurfsmusters

    public static MyGUI getInstance() { // Anm.: Implementierung des Singleton-Entwurfsmusters
        if (instance == null) {
            // Instanz erzeugen
            instance = new MyGUI();
        }
        return instance;
    }

    private MyGUI() {
        initComponents();
        
        Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {
// AWTEventListener hier als anonyme Klasse
            @Override
            public void eventDispatched(AWTEvent arg0) {
                KeyEvent keyEvent = (KeyEvent) arg0;
                if (keyEvent.getKeyCode() == KeyEvent.VK_ESCAPE) {
                    Sound.StoppeSound();
                }
 
            }
        }, AWTEvent.KEY_EVENT_MASK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        WeckerStellen = new javax.swing.JButton();
        KaffeButton = new javax.swing.JToggleButton();
        LichtButton = new javax.swing.JToggleButton();
        ALARMButton = new javax.swing.JButton();
        Uhrzeit = new javax.swing.JTextArea();
        Datum = new javax.swing.JTextArea();
        AusgabePanel = new javax.swing.JScrollPane();
        TextinAusgabe = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(32767, 32767));
        jPanel1.setLayout(null);

        WeckerStellen.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        WeckerStellen.setForeground(new java.awt.Color(204, 0, 0));
        WeckerStellen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/wecker-button-aus.jpg"))); // NOI18N
        WeckerStellen.setText("WeckerStellen");
        WeckerStellen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WeckerStellenMouseClicked(evt);
            }
        });
        jPanel1.add(WeckerStellen);
        WeckerStellen.setBounds(550, 300, 60, 60);

        KaffeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/kaffee-button-aus_1.jpg"))); // NOI18N
        KaffeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KaffeButtonMouseClicked(evt);
            }
        });
        jPanel1.add(KaffeButton);
        KaffeButton.setBounds(550, 380, 60, 60);

        LichtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/Licht-button-aus.jpg"))); // NOI18N
        LichtButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/Licht-button-an.jpg"))); // NOI18N
        LichtButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LichtButtonItemStateChanged(evt);
            }
        });
        jPanel1.add(LichtButton);
        LichtButton.setBounds(550, 230, 60, 60);

        ALARMButton.setForeground(new java.awt.Color(204, 0, 0));
        ALARMButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/wecker-button-an.jpg"))); // NOI18N
        ALARMButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ALARMButtonMouseClicked(evt);
            }
        });
        jPanel1.add(ALARMButton);
        ALARMButton.setBounds(530, 10, 100, 40);

        Uhrzeit.setEditable(false);
        Uhrzeit.setBackground(new java.awt.Color(79, 165, 231));
        Uhrzeit.setColumns(20);
        Uhrzeit.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        Uhrzeit.setRows(5);
        jPanel1.add(Uhrzeit);
        Uhrzeit.setBounds(70, 200, 210, 50);

        Datum.setEditable(false);
        Datum.setBackground(new java.awt.Color(79, 165, 231));
        Datum.setColumns(20);
        Datum.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        Datum.setRows(5);
        jPanel1.add(Datum);
        Datum.setBounds(50, 150, 250, 50);
        Datum.getAccessibleContext().setAccessibleName("");

        AusgabePanel.setAutoscrolls(true);
        AusgabePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TextinAusgabe.setEditable(false);
        TextinAusgabe.setColumns(20);
        TextinAusgabe.setRows(5);
        AusgabePanel.setViewportView(TextinAusgabe);

        jPanel1.add(AusgabePanel);
        AusgabePanel.setBounds(20, 386, 430, 70);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/BlauerHintergrund_1.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(90, 90));
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(530, 210, 100, 250);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/BlauerHintergrund_1.jpg"))); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(90, 90));
        jLabel2.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 640, 470);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WeckerStellenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WeckerStellenMouseClicked
        // TODO add your handling code here:
        Gui_Weckzeit b = Gui_Weckzeit.getInstance();
        b.setVisible(true);
    }//GEN-LAST:event_WeckerStellenMouseClicked

    private void KaffeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KaffeButtonMouseClicked
        if (this.KaffeButton.isEnabled() == true){
            KaffeeKochen.kaffeeKochen();
        }
    }//GEN-LAST:event_KaffeButtonMouseClicked

    private void LichtButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LichtButtonItemStateChanged
        // TODO add your handling code here:
        if (Weckvorgang.getistLichtManuellAn() == true) {
            Weckvorgang.setLichtManuellAus();
        } else {
            Weckvorgang.setLichtManuellAn();
        }
    }//GEN-LAST:event_LichtButtonItemStateChanged

    private void ALARMButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ALARMButtonMouseClicked
        // TODO add your handling code here:
        Gui_Alarmloeschen.getInstance();
        Gui_Alarmloeschen.getInstance().setVisible(true);
    }//GEN-LAST:event_ALARMButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ALARMButton;
    private javax.swing.JScrollPane AusgabePanel;
    private javax.swing.JTextArea Datum;
    private javax.swing.JToggleButton KaffeButton;
    private javax.swing.JToggleButton LichtButton;
    private javax.swing.JTextArea TextinAusgabe;
    private javax.swing.JTextArea Uhrzeit;
    private javax.swing.JButton WeckerStellen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    /**
     * Methode zum Deaktivieren des Kaffee-Buttons
     */
    public void setKaffeButtonUnactive() {
        this.KaffeButton.setEnabled(false);
        this.KaffeButton.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/kaffee-button-an.jpg")));
    }
    
    /**
     * Methode zum Aktivieren des Kaffee-Buttons
     */
    public void setKaffeButtonActive() {
        this.KaffeButton.setEnabled(true);
        //this.KaffeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/softwareengeniering2/kaffee-button-aus.jpg")));
    }

    /**
     * Methode zum Einfügen eines Textes in das Textfeld auf dem Hauptfenster
     * @param Text der einzufügende Text
     */
    public void AddTextToPanel(String Text) {
        this.TextinAusgabe.append(Text);
        //textArea.setCaretPosition(textArea.getDocument().getLength()); 
        this.TextinAusgabe.setCaretPosition(this.TextinAusgabe.getDocument().getLength());
    }

    /**
     * Methode zum Anzeigen des aktuellen Datum und der aktuellen Zeit
     */
    public void zeigeaktulleStunde() {
        // Das hier muss noch Aktualliesiert werden pro Stunde ;)
        final DateFormat theClockFormat = new SimpleDateFormat("HH:mm:ss");
        final DateFormat theClockFormat2 = new SimpleDateFormat("dd.MM.yyyy");
        final JTextArea theClockHour = this.Uhrzeit;
        final JTextArea theDate = this.Datum;
        /* a timer with delay of one second */
        final Timer clockTimer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                String text = theClockFormat.format(new Date());
                String text2 = theClockFormat2.format(new Date());
                /* synchronized since threaded access */
                synchronized (theClockHour.getTreeLock()) {
                    theClockHour.setText(text);
                }
                synchronized (theDate.getTreeLock()) {
                    theDate.setText(text2);
                }
            }
        });

        clockTimer.start();
    }
    /*
    public void zeigeaktulleMinutean() {
        // Das hier muss noch Aktualliesiert werden pro Minute ;)
        final DateFormat theClockFormat = new SimpleDateFormat("mm");
        final JTextArea theClockMinute = this.TextMinute;
        /* a timer with delay of one second */
    /*
        final Timer clockTimer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                String text = theClockFormat.format(new Date());
                /* synchronized since threaded access */
    /*
                synchronized (theClockMinute.getTreeLock()) {
                    theClockMinute.setText(text);
                }
            }
        });

        clockTimer.start();
    }*/
    
    
    /**
     * Methode zum Anzeigen des Alarm-Buttons
     */
    public void setALARMButtonActive(){
        this.ALARMButton.setVisible(true);
    }
    
    /**
     * Methode zum verbergen des Alarm-Buttons
     */
    public void setALARMButtonUNActive(){
        this.ALARMButton.setVisible(false);
        
    }
    
    public void naechsteWeckzeitAnzeigen(String Anzeige) {
    }


}
